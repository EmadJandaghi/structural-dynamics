% calling this function will load problem geometry into the main program
% refCoords : Problem Node Coordinates in reference Configuration
% E : Young's Modulus
% nn : number of nodes
% nDOFs : total number of degrees of freedom
% elConn : element ID connectivity matrix
% DOFConn : element DOF connectivity matrix
% fixedNodes : essential node numbers
% fixedDOFs : fixed degrees of freedoms
% activeDOFs : active degrees of freedoms
% nADOFs : number of active degrees of freedoms
% L0List : Initial length of elements
% nel : Number Of Elements
% s0List : initial stress in members
nex=6;ney=6;
Lx=10; Ly=10;
Nx=0;   Ny=0;   Nxy=0;
refCoords=[0.,0.,0;0.833333,0.,0;1.66667,0.,0;2.5,0.,0;3.33333,0.,0;4.16667,0.,0;5.,0.,0;5.83333,0.,0;6.66667,0.,0;7.5,0.,0;8.33333,0.,0;9.16667,0.,0;10.,0.,0;0.,1.66667,0;0.833333,1.66667,0;1.66667,1.66667,0;2.5,1.66667,0;3.33333,1.66667,0;4.16667,1.66667,0;5.,1.66667,0;5.83333,1.66667,0;6.66667,1.66667,0;7.5,1.66667,0;8.33333,1.66667,0;9.16667,1.66667,0;10.,1.66667,0;0.,3.33333,0;0.833333,3.33333,0;1.66667,3.33333,0;2.5,3.33333,0;3.33333,3.33333,0;4.16667,3.33333,0;5.,3.33333,0;5.83333,3.33333,0;6.66667,3.33333,0;7.5,3.33333,0;8.33333,3.33333,0;9.16667,3.33333,0;10.,3.33333,0;0.,5.,0;0.833333,5.,0;1.66667,5.,0;2.5,5.,0;3.33333,5.,0;4.16667,5.,0;5.,5.,0;5.83333,5.,0;6.66667,5.,0;7.5,5.,0;8.33333,5.,0;9.16667,5.,0;10.,5.,0;0.,6.66667,0;0.833333,6.66667,0;1.66667,6.66667,0;2.5,6.66667,0;3.33333,6.66667,0;4.16667,6.66667,0;5.,6.66667,0;5.83333,6.66667,0;6.66667,6.66667,0;7.5,6.66667,0;8.33333,6.66667,0;9.16667,6.66667,0;10.,6.66667,0;0.,8.33333,0;0.833333,8.33333,0;1.66667,8.33333,0;2.5,8.33333,0;3.33333,8.33333,0;4.16667,8.33333,0;5.,8.33333,0;5.83333,8.33333,0;6.66667,8.33333,0;7.5,8.33333,0;8.33333,8.33333,0;9.16667,8.33333,0;10.,8.33333,0;0.,10.,0;0.833333,10.,0;1.66667,10.,0;2.5,10.,0;3.33333,10.,0;4.16667,10.,0;5.,10.,0;5.83333,10.,0;6.66667,10.,0;7.5,10.,0;8.33333,10.,0;9.16667,10.,0;10.,10.,0;0.,0.833333,0;1.66667,0.833333,0;3.33333,0.833333,0;5.,0.833333,0;6.66667,0.833333,0;8.33333,0.833333,0;10.,0.833333,0;0.,2.5,0;1.66667,2.5,0;3.33333,2.5,0;5.,2.5,0;6.66667,2.5,0;8.33333,2.5,0;10.,2.5,0;0.,4.16667,0;1.66667,4.16667,0;3.33333,4.16667,0;5.,4.16667,0;6.66667,4.16667,0;8.33333,4.16667,0;10.,4.16667,0;0.,5.83333,0;1.66667,5.83333,0;3.33333,5.83333,0;5.,5.83333,0;6.66667,5.83333,0;8.33333,5.83333,0;10.,5.83333,0;0.,7.5,0;1.66667,7.5,0;3.33333,7.5,0;5.,7.5,0;6.66667,7.5,0;8.33333,7.5,0;10.,7.5,0;0.,9.16667,0;1.66667,9.16667,0;3.33333,9.16667,0;5.,9.16667,0;6.66667,9.16667,0;8.33333,9.16667,0;10.,9.16667,0];
E=1e7;   % lb/in2
nn=length(refCoords);
nDOFs=5*nn;
elConn=[1,2,3,93,16,15,14,92;14,15,16,100,29,28,27,99;27,28,29,107,42,41,40,106;40,41,42,114,55,54,53,113;53,54,55,121,68,67,66,120;66,67,68,128,81,80,79,127;3,4,5,94,18,17,16,93;16,17,18,101,31,30,29,100;29,30,31,108,44,43,42,107;42,43,44,115,57,56,55,114;55,56,57,122,70,69,68,121;68,69,70,129,83,82,81,128;5,6,7,95,20,19,18,94;18,19,20,102,33,32,31,101;31,32,33,109,46,45,44,108;44,45,46,116,59,58,57,115;57,58,59,123,72,71,70,122;70,71,72,130,85,84,83,129;7,8,9,96,22,21,20,95;20,21,22,103,35,34,33,102;33,34,35,110,48,47,46,109;46,47,48,117,61,60,59,116;59,60,61,124,74,73,72,123;72,73,74,131,87,86,85,130;9,10,11,97,24,23,22,96;22,23,24,104,37,36,35,103;35,36,37,111,50,49,48,110;48,49,50,118,63,62,61,117;61,62,63,125,76,75,74,124;74,75,76,132,89,88,87,131;11,12,13,98,26,25,24,97;24,25,26,105,39,38,37,104;37,38,39,112,52,51,50,111;50,51,52,119,65,64,63,118;63,64,65,126,78,77,76,125;76,77,78,133,91,90,89,132];
th=0.5;    %(Thickness) inch
nu=0.3;   % poissons ratio
alfa=(6/5);   % Intentionally 'alfa', not alpha (shear factor)
nel=length(elConn);

[fixedDOFs,activeDOFs]=MindlinPlateBC(nex,ney);


% Automated procedure:
DOFConn=[5*elConn(:,1)-4,5*elConn(:,1)-3,5*elConn(:,1)-2,5*elConn(:,1)-1,5*elConn(:,1),...
         5*elConn(:,2)-4,5*elConn(:,2)-3,5*elConn(:,2)-2,5*elConn(:,2)-1,5*elConn(:,2),...
         5*elConn(:,3)-4,5*elConn(:,3)-3,5*elConn(:,3)-2,5*elConn(:,3)-1,5*elConn(:,3),...
         5*elConn(:,4)-4,5*elConn(:,4)-3,5*elConn(:,4)-2,5*elConn(:,4)-1,5*elConn(:,4),...
         5*elConn(:,5)-4,5*elConn(:,5)-3,5*elConn(:,5)-2,5*elConn(:,5)-1,5*elConn(:,5),...
         5*elConn(:,6)-4,5*elConn(:,6)-3,5*elConn(:,6)-2,5*elConn(:,6)-1,5*elConn(:,6),...
         5*elConn(:,7)-4,5*elConn(:,7)-3,5*elConn(:,7)-2,5*elConn(:,7)-1,5*elConn(:,7),...
         5*elConn(:,8)-4,5*elConn(:,8)-3,5*elConn(:,8)-2,5*elConn(:,8)-1,5*elConn(:,8)];

nADOfs=length(activeDOFs);
nn=length(refCoords);

Dbar=[1,nu,0;nu,1,0;0,0,0.5*(1-nu)];
G=0.5*(E/(1+nu));
Dhp=(E*th/(1-nu^2))*Dbar;
Dhb=(E*(th^3))/(12*(1-nu^2))*Dbar;
Dhs=(G*th/alfa)*eye(2);
Dh=[Dhp,zeros(3),zeros(3,2);zeros(3),Dhb,zeros(3,2);zeros(2,6),Dhs];